//astar.cpp
#include <iostream>
#include <iomanip>
#include <queue>
#include <string>
#include <math.h>
#include <ctime>

class node
{
	public:
        node(int xp, int yp, int d, int p):
            xPos(xp),yPos(yp),level(d),priority(p){}

        int getxPos() const {return xPos;}
        int getyPos() const {return yPos;}
        int getLevel() const {return level;}
        int getPriority() const {return priority;}

        void updatePriority(const int &xDest, const int &yDest)
        {
            priority = level+estimate(xDest, yDest)*10;
        }

        void nextLevel(const int &i)
        {
            
        }

        const int &estimate(const int &xDest, const int &yDest)
        {
            static int xd, yd, d;
            xd = xDest - xPos;
            yd = yDest - yPos;

            d = (int)(sqrt(xd * xd + yd * yd));

            return d;
        }
	private:
		//x and y pos
		int xPos;
		int yPos;
		//total distanced traveled
		int level;
		//level + remaining distance estimate
		int priority;

};
